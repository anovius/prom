const UNCX_CONTRACT_ADDRESS = "0xDba68f07d1b7Ca219f78ae8582C213d975c25cAf";
const UNCX_CONTRACT_ABI = [
	{
		inputs: [{ internalType: "contract IUnicryptAdmin", name: "_uncxAdmins", type: "address" }],
		stateMutability: "nonpayable",
		type: "constructor",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "previousOwner", type: "address" },
			{ indexed: true, internalType: "address", name: "newOwner", type: "address" },
		],
		name: "OwnershipTransferred",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: false, internalType: "uint256", name: "lockID", type: "uint256" },
			{ indexed: false, internalType: "address", name: "token", type: "address" },
			{ indexed: false, internalType: "address", name: "owner", type: "address" },
			{ indexed: false, internalType: "uint256", name: "amountInTokens", type: "uint256" },
			{ indexed: false, internalType: "uint256", name: "startEmission", type: "uint256" },
			{ indexed: false, internalType: "uint256", name: "endEmission", type: "uint256" },
		],
		name: "onLock",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: false, internalType: "uint256", name: "lockID", type: "uint256" },
			{ indexed: false, internalType: "uint256", name: "amountInTokens", type: "uint256" },
		],
		name: "onMigrate",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: false, internalType: "uint256", name: "lockID", type: "uint256" },
			{ indexed: false, internalType: "uint256", name: "unlockDate", type: "uint256" },
		],
		name: "onRelock",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: false, internalType: "uint256", name: "fromLockID", type: "uint256" },
			{ indexed: false, internalType: "uint256", name: "toLockID", type: "uint256" },
			{ indexed: false, internalType: "uint256", name: "amountInTokens", type: "uint256" },
		],
		name: "onSplitLock",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: false, internalType: "uint256", name: "lockIDFrom", type: "uint256" },
			{ indexed: false, internalType: "uint256", name: "lockIDto", type: "uint256" },
			{ indexed: false, internalType: "address", name: "oldOwner", type: "address" },
			{ indexed: false, internalType: "address", name: "newOwner", type: "address" },
		],
		name: "onTransferLock",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: false, internalType: "address", name: "lpToken", type: "address" },
			{ indexed: false, internalType: "uint256", name: "amountInTokens", type: "uint256" },
		],
		name: "onWithdraw",
		type: "event",
	},
	{
		inputs: [],
		name: "BLACKLIST",
		outputs: [{ internalType: "contract ITokenBlacklist", name: "", type: "address" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "FEES",
		outputs: [
			{ internalType: "uint256", name: "tokenFee", type: "uint256" },
			{ internalType: "uint256", name: "freeLockingFee", type: "uint256" },
			{ internalType: "address payable", name: "feeAddress", type: "address" },
			{ internalType: "address", name: "freeLockingToken", type: "address" },
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		name: "LOCKS",
		outputs: [
			{ internalType: "address", name: "tokenAddress", type: "address" },
			{ internalType: "uint256", name: "sharesDeposited", type: "uint256" },
			{ internalType: "uint256", name: "sharesWithdrawn", type: "uint256" },
			{ internalType: "uint256", name: "startEmission", type: "uint256" },
			{ internalType: "uint256", name: "endEmission", type: "uint256" },
			{ internalType: "uint256", name: "lockID", type: "uint256" },
			{ internalType: "address", name: "owner", type: "address" },
			{ internalType: "address", name: "condition", type: "address" },
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "MIGRATOR",
		outputs: [{ internalType: "contract IMigrator", name: "", type: "address" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "MINIMUM_DEPOSIT",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "NONCE",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [{ internalType: "address", name: "", type: "address" }],
		name: "SHARES",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "_user", type: "address" },
			{ internalType: "bool", name: "_add", type: "bool" },
		],
		name: "adminSetWhitelister",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "_token", type: "address" },
			{ internalType: "uint256", name: "_shares", type: "uint256" },
		],
		name: "convertSharesToTokens",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "_token", type: "address" },
			{ internalType: "uint256", name: "_tokens", type: "uint256" },
		],
		name: "convertTokensToShares",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "_token", type: "address" },
			{ internalType: "bool", name: "_add", type: "bool" },
		],
		name: "editZeroFeeWhitelist",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [{ internalType: "uint256", name: "_lockID", type: "uint256" }],
		name: "getLock",
		outputs: [
			{ internalType: "uint256", name: "", type: "uint256" },
			{ internalType: "address", name: "", type: "address" },
			{ internalType: "uint256", name: "", type: "uint256" },
			{ internalType: "uint256", name: "", type: "uint256" },
			{ internalType: "uint256", name: "", type: "uint256" },
			{ internalType: "uint256", name: "", type: "uint256" },
			{ internalType: "uint256", name: "", type: "uint256" },
			{ internalType: "uint256", name: "", type: "uint256" },
			{ internalType: "address", name: "", type: "address" },
			{ internalType: "address", name: "", type: "address" },
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "getNumLockedTokens",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [{ internalType: "uint256", name: "_index", type: "uint256" }],
		name: "getTokenAtIndex",
		outputs: [{ internalType: "address", name: "", type: "address" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "_token", type: "address" },
			{ internalType: "uint256", name: "_index", type: "uint256" },
		],
		name: "getTokenLockIDAtIndex",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [{ internalType: "address", name: "_token", type: "address" }],
		name: "getTokenLocksLength",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [{ internalType: "uint256", name: "_index", type: "uint256" }],
		name: "getTokenWhitelisterAtIndex",
		outputs: [{ internalType: "address", name: "", type: "address" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "getTokenWhitelisterLength",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [{ internalType: "address", name: "_user", type: "address" }],
		name: "getTokenWhitelisterStatus",
		outputs: [{ internalType: "bool", name: "", type: "bool" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "_user", type: "address" },
			{ internalType: "address", name: "_token", type: "address" },
			{ internalType: "uint256", name: "_index", type: "uint256" },
		],
		name: "getUserLockIDForTokenAtIndex",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "_user", type: "address" },
			{ internalType: "uint256", name: "_index", type: "uint256" },
		],
		name: "getUserLockedTokenAtIndex",
		outputs: [{ internalType: "address", name: "", type: "address" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [{ internalType: "address", name: "_user", type: "address" }],
		name: "getUserLockedTokensLength",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "_user", type: "address" },
			{ internalType: "address", name: "_token", type: "address" },
		],
		name: "getUserLocksForTokenLength",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [{ internalType: "uint256", name: "_lockID", type: "uint256" }],
		name: "getWithdrawableShares",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [{ internalType: "uint256", name: "_lockID", type: "uint256" }],
		name: "getWithdrawableTokens",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [{ internalType: "uint256", name: "_index", type: "uint256" }],
		name: "getZeroFeeTokenAtIndex",
		outputs: [{ internalType: "address", name: "", type: "address" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "getZeroFeeTokensLength",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "uint256", name: "_lockID", type: "uint256" },
			{ internalType: "uint256", name: "_amount", type: "uint256" },
		],
		name: "incrementLock",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "_token", type: "address" },
			{
				components: [
					{ internalType: "address payable", name: "owner", type: "address" },
					{ internalType: "uint256", name: "amount", type: "uint256" },
					{ internalType: "uint256", name: "startEmission", type: "uint256" },
					{ internalType: "uint256", name: "endEmission", type: "uint256" },
					{ internalType: "address", name: "condition", type: "address" },
				],
				internalType: "struct TokenVesting.LockParams[]",
				name: "_lock_params",
				type: "tuple[]",
			},
		],
		name: "lock",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "uint256", name: "_lockID", type: "uint256" },
			{ internalType: "uint256", name: "_option", type: "uint256" },
		],
		name: "migrate",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [],
		name: "owner",
		outputs: [{ internalType: "address", name: "", type: "address" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [{ internalType: "address", name: "_token", type: "address" }],
		name: "payForFreeTokenLocks",
		outputs: [],
		stateMutability: "payable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "uint256", name: "_lockID", type: "uint256" },
			{ internalType: "uint256", name: "_unlock_date", type: "uint256" },
		],
		name: "relock",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{ inputs: [], name: "renounceOwnership", outputs: [], stateMutability: "nonpayable", type: "function" },
	{
		inputs: [{ internalType: "uint256", name: "_lockID", type: "uint256" }],
		name: "revokeCondition",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [{ internalType: "contract ITokenBlacklist", name: "_contract", type: "address" }],
		name: "setBlacklistContract",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "uint256", name: "_tokenFee", type: "uint256" },
			{ internalType: "uint256", name: "_freeLockingFee", type: "uint256" },
			{ internalType: "address payable", name: "_feeAddress", type: "address" },
			{ internalType: "address", name: "_freeLockingToken", type: "address" },
		],
		name: "setFees",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [{ internalType: "contract IMigrator", name: "_migrator", type: "address" }],
		name: "setMigrator",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "uint256", name: "_lockID", type: "uint256" },
			{ internalType: "uint256", name: "_amount", type: "uint256" },
		],
		name: "splitLock",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [{ internalType: "address", name: "condition", type: "address" }],
		name: "testCondition",
		outputs: [{ internalType: "bool", name: "", type: "bool" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [{ internalType: "address", name: "_token", type: "address" }],
		name: "tokenOnZeroFeeWhitelist",
		outputs: [{ internalType: "bool", name: "", type: "bool" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "uint256", name: "_lockID", type: "uint256" },
			{ internalType: "address payable", name: "_newOwner", type: "address" },
		],
		name: "transferLockOwnership",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [{ internalType: "address", name: "newOwner", type: "address" }],
		name: "transferOwnership",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "uint256", name: "_lockID", type: "uint256" },
			{ internalType: "uint256", name: "_amount", type: "uint256" },
		],
		name: "withdraw",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
];

const UNISWAP_ROUTER_ABI = [
	{
		inputs: [
			{ internalType: "address", name: "_factory", type: "address" },
			{ internalType: "address", name: "_WETH", type: "address" },
		],
		stateMutability: "nonpayable",
		type: "constructor",
	},
	{
		inputs: [],
		name: "WETH",
		outputs: [{ internalType: "address", name: "", type: "address" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "tokenA", type: "address" },
			{ internalType: "address", name: "tokenB", type: "address" },
			{ internalType: "uint256", name: "amountADesired", type: "uint256" },
			{ internalType: "uint256", name: "amountBDesired", type: "uint256" },
			{ internalType: "uint256", name: "amountAMin", type: "uint256" },
			{ internalType: "uint256", name: "amountBMin", type: "uint256" },
			{ internalType: "address", name: "to", type: "address" },
			{ internalType: "uint256", name: "deadline", type: "uint256" },
		],
		name: "addLiquidity",
		outputs: [
			{ internalType: "uint256", name: "amountA", type: "uint256" },
			{ internalType: "uint256", name: "amountB", type: "uint256" },
			{ internalType: "uint256", name: "liquidity", type: "uint256" },
		],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "token", type: "address" },
			{ internalType: "uint256", name: "amountTokenDesired", type: "uint256" },
			{ internalType: "uint256", name: "amountTokenMin", type: "uint256" },
			{ internalType: "uint256", name: "amountETHMin", type: "uint256" },
			{ internalType: "address", name: "to", type: "address" },
			{ internalType: "uint256", name: "deadline", type: "uint256" },
		],
		name: "addLiquidityETH",
		outputs: [
			{ internalType: "uint256", name: "amountToken", type: "uint256" },
			{ internalType: "uint256", name: "amountETH", type: "uint256" },
			{ internalType: "uint256", name: "liquidity", type: "uint256" },
		],
		stateMutability: "payable",
		type: "function",
	},
	{
		inputs: [],
		name: "factory",
		outputs: [{ internalType: "address", name: "", type: "address" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "uint256", name: "amountOut", type: "uint256" },
			{ internalType: "uint256", name: "reserveIn", type: "uint256" },
			{ internalType: "uint256", name: "reserveOut", type: "uint256" },
		],
		name: "getAmountIn",
		outputs: [{ internalType: "uint256", name: "amountIn", type: "uint256" }],
		stateMutability: "pure",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "uint256", name: "amountIn", type: "uint256" },
			{ internalType: "uint256", name: "reserveIn", type: "uint256" },
			{ internalType: "uint256", name: "reserveOut", type: "uint256" },
		],
		name: "getAmountOut",
		outputs: [{ internalType: "uint256", name: "amountOut", type: "uint256" }],
		stateMutability: "pure",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "uint256", name: "amountOut", type: "uint256" },
			{ internalType: "address[]", name: "path", type: "address[]" },
		],
		name: "getAmountsIn",
		outputs: [{ internalType: "uint256[]", name: "amounts", type: "uint256[]" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "uint256", name: "amountIn", type: "uint256" },
			{ internalType: "address[]", name: "path", type: "address[]" },
		],
		name: "getAmountsOut",
		outputs: [{ internalType: "uint256[]", name: "amounts", type: "uint256[]" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "uint256", name: "amountA", type: "uint256" },
			{ internalType: "uint256", name: "reserveA", type: "uint256" },
			{ internalType: "uint256", name: "reserveB", type: "uint256" },
		],
		name: "quote",
		outputs: [{ internalType: "uint256", name: "amountB", type: "uint256" }],
		stateMutability: "pure",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "tokenA", type: "address" },
			{ internalType: "address", name: "tokenB", type: "address" },
			{ internalType: "uint256", name: "liquidity", type: "uint256" },
			{ internalType: "uint256", name: "amountAMin", type: "uint256" },
			{ internalType: "uint256", name: "amountBMin", type: "uint256" },
			{ internalType: "address", name: "to", type: "address" },
			{ internalType: "uint256", name: "deadline", type: "uint256" },
		],
		name: "removeLiquidity",
		outputs: [
			{ internalType: "uint256", name: "amountA", type: "uint256" },
			{ internalType: "uint256", name: "amountB", type: "uint256" },
		],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "token", type: "address" },
			{ internalType: "uint256", name: "liquidity", type: "uint256" },
			{ internalType: "uint256", name: "amountTokenMin", type: "uint256" },
			{ internalType: "uint256", name: "amountETHMin", type: "uint256" },
			{ internalType: "address", name: "to", type: "address" },
			{ internalType: "uint256", name: "deadline", type: "uint256" },
		],
		name: "removeLiquidityETH",
		outputs: [
			{ internalType: "uint256", name: "amountToken", type: "uint256" },
			{ internalType: "uint256", name: "amountETH", type: "uint256" },
		],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "token", type: "address" },
			{ internalType: "uint256", name: "liquidity", type: "uint256" },
			{ internalType: "uint256", name: "amountTokenMin", type: "uint256" },
			{ internalType: "uint256", name: "amountETHMin", type: "uint256" },
			{ internalType: "address", name: "to", type: "address" },
			{ internalType: "uint256", name: "deadline", type: "uint256" },
		],
		name: "removeLiquidityETHSupportingFeeOnTransferTokens",
		outputs: [{ internalType: "uint256", name: "amountETH", type: "uint256" }],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "token", type: "address" },
			{ internalType: "uint256", name: "liquidity", type: "uint256" },
			{ internalType: "uint256", name: "amountTokenMin", type: "uint256" },
			{ internalType: "uint256", name: "amountETHMin", type: "uint256" },
			{ internalType: "address", name: "to", type: "address" },
			{ internalType: "uint256", name: "deadline", type: "uint256" },
			{ internalType: "bool", name: "approveMax", type: "bool" },
			{ internalType: "uint8", name: "v", type: "uint8" },
			{ internalType: "bytes32", name: "r", type: "bytes32" },
			{ internalType: "bytes32", name: "s", type: "bytes32" },
		],
		name: "removeLiquidityETHWithPermit",
		outputs: [
			{ internalType: "uint256", name: "amountToken", type: "uint256" },
			{ internalType: "uint256", name: "amountETH", type: "uint256" },
		],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "token", type: "address" },
			{ internalType: "uint256", name: "liquidity", type: "uint256" },
			{ internalType: "uint256", name: "amountTokenMin", type: "uint256" },
			{ internalType: "uint256", name: "amountETHMin", type: "uint256" },
			{ internalType: "address", name: "to", type: "address" },
			{ internalType: "uint256", name: "deadline", type: "uint256" },
			{ internalType: "bool", name: "approveMax", type: "bool" },
			{ internalType: "uint8", name: "v", type: "uint8" },
			{ internalType: "bytes32", name: "r", type: "bytes32" },
			{ internalType: "bytes32", name: "s", type: "bytes32" },
		],
		name: "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
		outputs: [{ internalType: "uint256", name: "amountETH", type: "uint256" }],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "tokenA", type: "address" },
			{ internalType: "address", name: "tokenB", type: "address" },
			{ internalType: "uint256", name: "liquidity", type: "uint256" },
			{ internalType: "uint256", name: "amountAMin", type: "uint256" },
			{ internalType: "uint256", name: "amountBMin", type: "uint256" },
			{ internalType: "address", name: "to", type: "address" },
			{ internalType: "uint256", name: "deadline", type: "uint256" },
			{ internalType: "bool", name: "approveMax", type: "bool" },
			{ internalType: "uint8", name: "v", type: "uint8" },
			{ internalType: "bytes32", name: "r", type: "bytes32" },
			{ internalType: "bytes32", name: "s", type: "bytes32" },
		],
		name: "removeLiquidityWithPermit",
		outputs: [
			{ internalType: "uint256", name: "amountA", type: "uint256" },
			{ internalType: "uint256", name: "amountB", type: "uint256" },
		],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "uint256", name: "amountOut", type: "uint256" },
			{ internalType: "address[]", name: "path", type: "address[]" },
			{ internalType: "address", name: "to", type: "address" },
			{ internalType: "uint256", name: "deadline", type: "uint256" },
		],
		name: "swapETHForExactTokens",
		outputs: [{ internalType: "uint256[]", name: "amounts", type: "uint256[]" }],
		stateMutability: "payable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "uint256", name: "amountOutMin", type: "uint256" },
			{ internalType: "address[]", name: "path", type: "address[]" },
			{ internalType: "address", name: "to", type: "address" },
			{ internalType: "uint256", name: "deadline", type: "uint256" },
		],
		name: "swapExactETHForTokens",
		outputs: [{ internalType: "uint256[]", name: "amounts", type: "uint256[]" }],
		stateMutability: "payable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "uint256", name: "amountOutMin", type: "uint256" },
			{ internalType: "address[]", name: "path", type: "address[]" },
			{ internalType: "address", name: "to", type: "address" },
			{ internalType: "uint256", name: "deadline", type: "uint256" },
		],
		name: "swapExactETHForTokensSupportingFeeOnTransferTokens",
		outputs: [],
		stateMutability: "payable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "uint256", name: "amountIn", type: "uint256" },
			{ internalType: "uint256", name: "amountOutMin", type: "uint256" },
			{ internalType: "address[]", name: "path", type: "address[]" },
			{ internalType: "address", name: "to", type: "address" },
			{ internalType: "uint256", name: "deadline", type: "uint256" },
		],
		name: "swapExactTokensForETH",
		outputs: [{ internalType: "uint256[]", name: "amounts", type: "uint256[]" }],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "uint256", name: "amountIn", type: "uint256" },
			{ internalType: "uint256", name: "amountOutMin", type: "uint256" },
			{ internalType: "address[]", name: "path", type: "address[]" },
			{ internalType: "address", name: "to", type: "address" },
			{ internalType: "uint256", name: "deadline", type: "uint256" },
		],
		name: "swapExactTokensForETHSupportingFeeOnTransferTokens",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "uint256", name: "amountIn", type: "uint256" },
			{ internalType: "uint256", name: "amountOutMin", type: "uint256" },
			{ internalType: "address[]", name: "path", type: "address[]" },
			{ internalType: "address", name: "to", type: "address" },
			{ internalType: "uint256", name: "deadline", type: "uint256" },
		],
		name: "swapExactTokensForTokens",
		outputs: [{ internalType: "uint256[]", name: "amounts", type: "uint256[]" }],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "uint256", name: "amountIn", type: "uint256" },
			{ internalType: "uint256", name: "amountOutMin", type: "uint256" },
			{ internalType: "address[]", name: "path", type: "address[]" },
			{ internalType: "address", name: "to", type: "address" },
			{ internalType: "uint256", name: "deadline", type: "uint256" },
		],
		name: "swapExactTokensForTokensSupportingFeeOnTransferTokens",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "uint256", name: "amountOut", type: "uint256" },
			{ internalType: "uint256", name: "amountInMax", type: "uint256" },
			{ internalType: "address[]", name: "path", type: "address[]" },
			{ internalType: "address", name: "to", type: "address" },
			{ internalType: "uint256", name: "deadline", type: "uint256" },
		],
		name: "swapTokensForExactETH",
		outputs: [{ internalType: "uint256[]", name: "amounts", type: "uint256[]" }],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "uint256", name: "amountOut", type: "uint256" },
			{ internalType: "uint256", name: "amountInMax", type: "uint256" },
			{ internalType: "address[]", name: "path", type: "address[]" },
			{ internalType: "address", name: "to", type: "address" },
			{ internalType: "uint256", name: "deadline", type: "uint256" },
		],
		name: "swapTokensForExactTokens",
		outputs: [{ internalType: "uint256[]", name: "amounts", type: "uint256[]" }],
		stateMutability: "nonpayable",
		type: "function",
	},
	{ stateMutability: "payable", type: "receive" },
];

const CONTRACT_ABI = [
	{
		inputs: [
			{ internalType: "address", name: "_router", type: "address" },
			{ internalType: "address", name: "_marketingWallet", type: "address" },
			{ internalType: "address", name: "_teamWallet", type: "address" },
			{ internalType: "address", name: "_bridgeVault", type: "address" },
		],
		stateMutability: "payable",
		type: "constructor",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "owner", type: "address" },
			{ indexed: true, internalType: "address", name: "spender", type: "address" },
			{ indexed: false, internalType: "uint256", name: "value", type: "uint256" },
		],
		name: "Approval",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "from", type: "address" },
			{ indexed: false, internalType: "uint256", name: "tAmount", type: "uint256" },
		],
		name: "LogDeliver",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [{ indexed: true, internalType: "address", name: "account", type: "address" }],
		name: "LogExcludeFromReward",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: false, internalType: "address", name: "from", type: "address" },
			{ indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
		],
		name: "LogFallback",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [{ indexed: true, internalType: "address", name: "account", type: "address" }],
		name: "LogIncludeInReward",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "account", type: "address" },
			{ indexed: false, internalType: "uint256", name: "tAmount", type: "uint256" },
		],
		name: "LogLockByBridge",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: false, internalType: "address", name: "from", type: "address" },
			{ indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
		],
		name: "LogReceive",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "setter", type: "address" },
			{ indexed: false, internalType: "address", name: "pair", type: "address" },
			{ indexed: false, internalType: "bool", name: "enabled", type: "bool" },
		],
		name: "LogSetAutomatedMarketMakerPair",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "setter", type: "address" },
			{ indexed: false, internalType: "address", name: "bridge", type: "address" },
		],
		name: "LogSetBridge",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: false, internalType: "address", name: "setter", type: "address" },
			{ indexed: false, internalType: "address", name: "_bridgeVault", type: "address" },
		],
		name: "LogSetBridgeVault",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "setter", type: "address" },
			{
				components: [
					{ internalType: "uint256", name: "autoLp", type: "uint256" },
					{ internalType: "uint256", name: "burn", type: "uint256" },
					{ internalType: "uint256", name: "marketing", type: "uint256" },
					{ internalType: "uint256", name: "tax", type: "uint256" },
					{ internalType: "uint256", name: "team", type: "uint256" },
				],
				indexed: false,
				internalType: "struct EmpireToken.BuyFee",
				name: "buyFee",
				type: "tuple",
			},
		],
		name: "LogSetBuyFees",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [{ indexed: false, internalType: "bool", name: "enabled", type: "bool" }],
		name: "LogSetEnableTrading",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "setter", type: "address" },
			{ indexed: false, internalType: "address", name: "account", type: "address" },
			{ indexed: false, internalType: "bool", name: "enabled", type: "bool" },
		],
		name: "LogSetExcludeFromFee",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "setter", type: "address" },
			{ indexed: false, internalType: "address", name: "marketingWallet", type: "address" },
		],
		name: "LogSetMarketingWallet",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "setter", type: "address" },
			{ indexed: false, internalType: "address", name: "router", type: "address" },
		],
		name: "LogSetRouterAddress",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "setter", type: "address" },
			{
				components: [
					{ internalType: "uint256", name: "autoLp", type: "uint256" },
					{ internalType: "uint256", name: "burn", type: "uint256" },
					{ internalType: "uint256", name: "marketing", type: "uint256" },
					{ internalType: "uint256", name: "tax", type: "uint256" },
					{ internalType: "uint256", name: "team", type: "uint256" },
				],
				indexed: false,
				internalType: "struct EmpireToken.SellFee",
				name: "sellFee",
				type: "tuple",
			},
		],
		name: "LogSetSellFees",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "setter", type: "address" },
			{ indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
		],
		name: "LogSetSwapTokensAmount",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "setter", type: "address" },
			{ indexed: false, internalType: "address", name: "teamWallet", type: "address" },
		],
		name: "LogSetTeamWallet",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: false, internalType: "uint256", name: "forMarketing", type: "uint256" },
			{ indexed: false, internalType: "uint256", name: "forLiquidity", type: "uint256" },
			{ indexed: false, internalType: "uint256", name: "forBurn", type: "uint256" },
			{ indexed: false, internalType: "uint256", name: "forTeam", type: "uint256" },
		],
		name: "LogSwapAndDistribute",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: false, internalType: "uint256", name: "tokensSwapped", type: "uint256" },
			{ indexed: false, internalType: "uint256", name: "ethReceived", type: "uint256" },
			{ indexed: false, internalType: "uint256", name: "tokensIntoLiquidity", type: "uint256" },
		],
		name: "LogSwapAndLiquify",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "setter", type: "address" },
			{ indexed: false, internalType: "bool", name: "enabled", type: "bool" },
		],
		name: "LogSwapAndLiquifyEnabledUpdated",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: false, internalType: "address", name: "from", type: "address" },
			{ indexed: false, internalType: "address", name: "to", type: "address" },
			{ indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
		],
		name: "LogTransfer",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "account", type: "address" },
			{ indexed: false, internalType: "uint256", name: "tAmount", type: "uint256" },
		],
		name: "LogUnlockByBridge",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "setter", type: "address" },
			{ indexed: false, internalType: "address", name: "liquidityWallet", type: "address" },
		],
		name: "LogUpdateLiquidityWallet",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "token", type: "address" },
			{ indexed: true, internalType: "address", name: "recipient", type: "address" },
			{ indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
		],
		name: "LogWithdrawToken",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "recipient", type: "address" },
			{ indexed: false, internalType: "uint256", name: "tAmount", type: "uint256" },
		],
		name: "LogWithdrawal",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "recipient", type: "address" },
			{ indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
		],
		name: "LogWithdrawalETH",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "previousOwner", type: "address" },
			{ indexed: true, internalType: "address", name: "newOwner", type: "address" },
		],
		name: "OwnershipTransferred",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "from", type: "address" },
			{ indexed: true, internalType: "address", name: "to", type: "address" },
			{ indexed: false, internalType: "uint256", name: "value", type: "uint256" },
		],
		name: "Transfer",
		type: "event",
	},
	{ stateMutability: "payable", type: "fallback" },
	{
		inputs: [],
		name: "_burnFee",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "_liquidityFee",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "_marketingFee",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "_taxFee",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "_teamFee",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "owner", type: "address" },
			{ internalType: "address", name: "spender", type: "address" },
		],
		name: "allowance",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "spender", type: "address" },
			{ internalType: "uint256", name: "amount", type: "uint256" },
		],
		name: "approve",
		outputs: [{ internalType: "bool", name: "", type: "bool" }],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [{ internalType: "address", name: "", type: "address" }],
		name: "automatedMarketMakerPairs",
		outputs: [{ internalType: "bool", name: "", type: "bool" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [{ internalType: "address", name: "account", type: "address" }],
		name: "balanceOf",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "bridge",
		outputs: [{ internalType: "address", name: "", type: "address" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "bridgeVault",
		outputs: [{ internalType: "address", name: "", type: "address" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "burnWallet",
		outputs: [{ internalType: "address", name: "", type: "address" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "buyFee",
		outputs: [
			{ internalType: "uint256", name: "autoLp", type: "uint256" },
			{ internalType: "uint256", name: "burn", type: "uint256" },
			{ internalType: "uint256", name: "marketing", type: "uint256" },
			{ internalType: "uint256", name: "tax", type: "uint256" },
			{ internalType: "uint256", name: "team", type: "uint256" },
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "circulatingSupply",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "decimals",
		outputs: [{ internalType: "uint8", name: "", type: "uint8" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "spender", type: "address" },
			{ internalType: "uint256", name: "subtractedValue", type: "uint256" },
		],
		name: "decreaseAllowance",
		outputs: [{ internalType: "bool", name: "", type: "bool" }],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [{ internalType: "uint256", name: "tAmount", type: "uint256" }],
		name: "deliver",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [{ internalType: "address", name: "account", type: "address" }],
		name: "excludeFromReward",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [{ internalType: "address", name: "account", type: "address" }],
		name: "includeInReward",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "spender", type: "address" },
			{ internalType: "uint256", name: "addedValue", type: "uint256" },
		],
		name: "increaseAllowance",
		outputs: [{ internalType: "bool", name: "", type: "bool" }],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [{ internalType: "address", name: "account", type: "address" }],
		name: "isExcludedFromFee",
		outputs: [{ internalType: "bool", name: "", type: "bool" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [{ internalType: "address", name: "account", type: "address" }],
		name: "isExcludedFromReward",
		outputs: [{ internalType: "bool", name: "", type: "bool" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "isTradingEnabled",
		outputs: [{ internalType: "bool", name: "", type: "bool" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "liquidityWallet",
		outputs: [{ internalType: "address", name: "", type: "address" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "account", type: "address" },
			{ internalType: "uint256", name: "tAmount", type: "uint256" },
		],
		name: "lock",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [],
		name: "marketingWallet",
		outputs: [{ internalType: "address", name: "", type: "address" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "name",
		outputs: [{ internalType: "string", name: "", type: "string" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "numTokensSellToAddToLiquidity",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "owner",
		outputs: [{ internalType: "address", name: "", type: "address" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "uint256", name: "tAmount", type: "uint256" },
			{ internalType: "bool", name: "deductTransferFee", type: "bool" },
		],
		name: "reflectionFromToken",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{ inputs: [], name: "renounceOwnership", outputs: [], stateMutability: "nonpayable", type: "function" },
	{
		inputs: [],
		name: "sellFee",
		outputs: [
			{ internalType: "uint256", name: "autoLp", type: "uint256" },
			{ internalType: "uint256", name: "burn", type: "uint256" },
			{ internalType: "uint256", name: "marketing", type: "uint256" },
			{ internalType: "uint256", name: "tax", type: "uint256" },
			{ internalType: "uint256", name: "team", type: "uint256" },
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "pair", type: "address" },
			{ internalType: "bool", name: "enabled", type: "bool" },
		],
		name: "setAutomatedMarketMakerPair",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [{ internalType: "address", name: "_bridge", type: "address" }],
		name: "setBridge",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [{ internalType: "address", name: "_bridgeVault", type: "address" }],
		name: "setBridgeVault",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "uint256", name: "_lp", type: "uint256" },
			{ internalType: "uint256", name: "_marketing", type: "uint256" },
			{ internalType: "uint256", name: "_burn", type: "uint256" },
			{ internalType: "uint256", name: "_tax", type: "uint256" },
			{ internalType: "uint256", name: "_team", type: "uint256" },
		],
		name: "setBuyFees",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [{ internalType: "bool", name: "enable", type: "bool" }],
		name: "setEnableTrading",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "account", type: "address" },
			{ internalType: "bool", name: "enabled", type: "bool" },
		],
		name: "setExcludeFromFee",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [{ internalType: "address", name: "newWallet", type: "address" }],
		name: "setMarketingWallet",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [{ internalType: "address", name: "newRouter", type: "address" }],
		name: "setRouterAddress",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "uint256", name: "_lp", type: "uint256" },
			{ internalType: "uint256", name: "_marketing", type: "uint256" },
			{ internalType: "uint256", name: "_burn", type: "uint256" },
			{ internalType: "uint256", name: "_tax", type: "uint256" },
			{ internalType: "uint256", name: "_team", type: "uint256" },
		],
		name: "setSellFees",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [{ internalType: "bool", name: "_enabled", type: "bool" }],
		name: "setSwapAndLiquifyEnabled",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [{ internalType: "uint256", name: "amount", type: "uint256" }],
		name: "setSwapTokensAmount",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [{ internalType: "address", name: "newWallet", type: "address" }],
		name: "setTeamWallet",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [],
		name: "swapAndLiquifyEnabled",
		outputs: [{ internalType: "bool", name: "", type: "bool" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "symbol",
		outputs: [{ internalType: "string", name: "", type: "string" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "teamWallet",
		outputs: [{ internalType: "address", name: "", type: "address" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [{ internalType: "uint256", name: "rAmount", type: "uint256" }],
		name: "tokenFromReflection",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "totalFees",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "totalSupply",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "recipient", type: "address" },
			{ internalType: "uint256", name: "amount", type: "uint256" },
		],
		name: "transfer",
		outputs: [{ internalType: "bool", name: "", type: "bool" }],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "sender", type: "address" },
			{ internalType: "address", name: "recipient", type: "address" },
			{ internalType: "uint256", name: "amount", type: "uint256" },
		],
		name: "transferFrom",
		outputs: [{ internalType: "bool", name: "", type: "bool" }],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [{ internalType: "address", name: "newOwner", type: "address" }],
		name: "transferOwnership",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [],
		name: "uniswapV2Router",
		outputs: [{ internalType: "contract IUniswapV2Router02", name: "", type: "address" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "account", type: "address" },
			{ internalType: "uint256", name: "tAmount", type: "uint256" },
		],
		name: "unlock",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [{ internalType: "address", name: "newLiquidityWallet", type: "address" }],
		name: "updateLiquidityWallet",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "recipient", type: "address" },
			{ internalType: "uint256", name: "tAmount", type: "uint256" },
		],
		name: "withdraw",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address payable", name: "recipient", type: "address" },
			{ internalType: "uint256", name: "amount", type: "uint256" },
		],
		name: "withdrawETH",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "contract IERC20", name: "token", type: "address" },
			{ internalType: "address", name: "recipient", type: "address" },
			{ internalType: "uint256", name: "amount", type: "uint256" },
		],
		name: "withdrawToken",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [],
		name: "tradingOpen",
		outputs: [{ internalType: "bool", name: "", type: "bool" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "_maxTxAmount",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "_maxWalletSize",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "startTrades",
		outputs: [{ internalType: "bool", name: "", type: "bool" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "maxTransactionAmount",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "maxWallet",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "_maxWalletToken",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "TradingOpen",
		outputs: [{ internalType: "bool", name: "", type: "bool" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "buyTotalFees",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "sellTotalFees",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "buyTax",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "sellTax",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "totalBuy",
		outputs: [{ internalType: "uint16", name: "", type: "uint16" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "totalSell",
		outputs: [{ internalType: "uint16", name: "", type: "uint16" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "tradingActive",
		outputs: [{ internalType: "bool", name: "", type: "bool" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "tradingEnabled",
		outputs: [{ internalType: "bool", name: "", type: "bool" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "totalBuyTax",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "totalSellTax",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "_buyFundFee",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "_sellFundFee",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "maxTransaction",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "BuyFee",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "SellFee",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "_tokensBuyFee",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "_tokensSellFee",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "startsTrades",
		outputs: [{ internalType: "bool", name: "", type: "bool" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "maxBuyAmount",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "maxWalletAmount",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{ stateMutability: "payable", type: "receive" },
];

const FUNC_ABI_MAP = {
	renounceOwnership: {
		inputs: [],
		name: "renounceOwnership",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	renounceownership: {
		inputs: [],
		name: "renounceownership",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	setTrading: {
		inputs: [{ internalType: "bool", name: "_tradingOpen", type: "bool" }],
		name: "setTrading",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	setMaxTxnAmount: {
		inputs: [{ internalType: "uint256", name: "maxTxAmount", type: "uint256" }],
		name: "setMaxTxnAmount",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	changeMaxTx: {
		inputs: [{ internalType: "uint256", name: "newMaxTx", type: "uint256" }],
		name: "changeMaxTx",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	setMaxTransactionAmounts: {
		inputs: [
			{ internalType: "uint256", name: "_maxTransactionAmountBuy", type: "uint256" },
			{ internalType: "uint256", name: "_maxTransactionAmountSell", type: "uint256" },
		],
		name: "setMaxTransactionAmounts",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	updateMaxTxnAmounts: {
		inputs: [
			{ internalType: "uint256", name: "txNum", type: "uint256" },
			{ internalType: "uint256", name: "walNum", type: "uint256" },
		],
		name: "updateMaxTxnAmounts",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	setMaxWalletSize: {
		inputs: [{ internalType: "uint256", name: "maxWalletSize", type: "uint256" }],
		name: "setMaxWalletSize",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	changeMaxWallet: {
		inputs: [{ internalType: "uint256", name: "newMaxWallet", type: "uint256" }],
		name: "changeMaxWallet",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	setFee: {
		inputs: [
			{ internalType: "uint256", name: "redisFeeOnBuy", type: "uint256" },
			{ internalType: "uint256", name: "redisFeeOnSell", type: "uint256" },
			{ internalType: "uint256", name: "taxFeeOnBuy", type: "uint256" },
			{ internalType: "uint256", name: "taxFeeOnSell", type: "uint256" },
		],
		name: "setFee",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	setFees: {
		inputs: [
			{ internalType: "uint8", name: "_buyMarketing", type: "uint8" },
			{ internalType: "uint8", name: "_buyLiquidity", type: "uint8" },
			{ internalType: "uint8", name: "_sellMarketing", type: "uint8" },
			{ internalType: "uint8", name: "_sellLiquidity", type: "uint8" },
		],
		name: "setFees",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	setTaxxa: {
		inputs: [
			{ internalType: "uint256", name: "_buy", type: "uint256" },
			{ internalType: "uint256", name: "_sell", type: "uint256" },
		],
		name: "setTaxxa",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	updateMaxTxnAmount: {
		inputs: [
			{ internalType: "uint256", name: "newMaxBuy", type: "uint256" },
			{ internalType: "uint256", name: "newMaxSell", type: "uint256" },
		],
		name: "updateMaxTxnAmount",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	updateMaxWalletAmount: {
		inputs: [{ internalType: "uint256", name: "newPercentage", type: "uint256" }],
		name: "updateMaxWalletAmount",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	updateMax: {
		inputs: [
			{ internalType: "uint256", name: "_newTxAmountInPermile", type: "uint256" },
			{ internalType: "uint256", name: "_newMaxAmountInPermile", type: "uint256" },
		],
		name: "updateMax",
		outputs: [{ internalType: "bool", name: "", type: "bool" }],
		stateMutability: "nonpayable",
		type: "function",
	},
	setTransactionLimits: {
		inputs: [
			{ internalType: "uint256", name: "_buy", type: "uint256" },
			{ internalType: "uint256", name: "_sell", type: "uint256" },
			{ internalType: "uint256", name: "_wallet", type: "uint256" },
		],
		name: "setTransactionLimits",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	updateFees: {
		inputs: [
			{ internalType: "uint256", name: "_buyLiquidityFee", type: "uint256" },
			{ internalType: "uint256", name: "_buyMarketingFee", type: "uint256" },
			{ internalType: "uint256", name: "_sellLiquidityFee", type: "uint256" },
			{ internalType: "uint256", name: "_sellMarketingFee", type: "uint256" },
		],
		name: "updateFees",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	updateFees: {
		inputs: [
			{ internalType: "uint8", name: "_marketingFeeBuy", type: "uint8" },
			{ internalType: "uint8", name: "_liquidityFeeBuy", type: "uint8" },
			{ internalType: "uint8", name: "_devFeeBuy", type: "uint8" },
			{ internalType: "uint8", name: "_marketingFeeSell", type: "uint8" },
			{ internalType: "uint8", name: "_liquidityFeeSell", type: "uint8" },
			{ internalType: "uint8", name: "_devFeeSell", type: "uint8" },
		],
		name: "updateFees",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	updateBuyFees: {
		inputs: [
			{ internalType: "uint256", name: "_marketingFee", type: "uint256" },
			{ internalType: "uint256", name: "_liquidityFee", type: "uint256" },
			{ internalType: "uint256", name: "_devFee", type: "uint256" },
		],
		name: "updateBuyFees",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	updateBuyFees: {
		inputs: [{ internalType: "uint256", name: "_marketingFeeOnBuy", type: "uint256" }],
		name: "updateBuyFees",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	updateSellFees: {
		inputs: [{ internalType: "uint256", name: "_marketingFeeOnSell", type: "uint256" }],
		name: "updateSellFees",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	updateSellFees: {
		inputs: [
			{ internalType: "uint256", name: "_marketingFee", type: "uint256" },
			{ internalType: "uint256", name: "_liquidityFee", type: "uint256" },
			{ internalType: "uint256", name: "_devFee", type: "uint256" },
			{ internalType: "uint256", name: "_earlySellLiquidityFee", type: "uint256" },
			{ internalType: "uint256", name: "_earlySellMarketingFee", type: "uint256" },
		],
		name: "updateSellFees",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	updateSellFees: {
		inputs: [
			{ internalType: "uint256", name: "_marketingFee", type: "uint256" },
			{ internalType: "uint256", name: "_liquidityFee", type: "uint256" },
			{ internalType: "uint256", name: "_devFee", type: "uint256" },
		],
		name: "updateSellFees",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	startTrade: {
		inputs: [{ internalType: "address", name: "poolAddress", type: "address" }],
		name: "startTrade",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	setTrading: {
		inputs: [{ internalType: "bool", name: "_tradingOpen", type: "bool" }],
		name: "setTrading",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	startTrading: { inputs: [], name: "startTrading", outputs: [], stateMutability: "nonpayable", type: "function" },
	openTrading: { inputs: [], name: "openTrading", outputs: [], stateMutability: "nonpayable", type: "function" },
	enableTrading: { inputs: [], name: "enableTrading", outputs: [], stateMutability: "nonpayable", type: "function" },
	updateSwapEnabled: {
		inputs: [{ internalType: "bool", name: "enabled", type: "bool" }],
		name: "updateSwapEnabled",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
};

const FUNC_SIGNATURE_MAP = {
	"0x715018a6": "renounceOwnership",
	"0xc2af913b": "renounceownership",
	"0x778c6152": "changeMaxTx",
	"0x74010ece": "setMaxTxnAmount",
	"0x3bc74044": "updateMaxTxnAmounts",
	"0x11a582c3": "updateMaxTxnAmount",
	"0x203e727e": "updateMaxTxnAmount",
	"0x2be32b61": "updateMaxBuyAmount",
	"0x9cc35351": "setTransactionLimits",
	"0xb6f7f681": "setMaxTransactionAmounts",
	"0xe9cc4edd": "updateMax",
	"0xea1644d5": "setMaxWalletSize",
	"0x0b006d60": "changeMaxWallet",
	"0xc18bc195": "updateMaxWalletAmount",
	"0xa2a957bb": "setFee",
	"0x9faa7cfd": "setFees",
	"0xa050b2c9": "setTaxxa",
	"0xc6616ba1": "updateFees",
	"0x3265e846": "updateFees",
	"0x66ca9b83": "updateBuyFees",
	"0x8095d564": "updateBuyFees",
	"0x2e6ed7ef": "updateBuyFees",
	"0x71fc4688": "updateBuyFees",
	"0x02dbd8f8": "updateSellFees",
	"0xc17b5b8c": "updateSellFees",
	"0xe7ad9fcd": "updateSellFees",
	"0xeba4c333": "updateSellFees",
	"0xff935af6": "updateSellFees",
	"0x6b0ec5b6": "startTrade",
	"0x293230b8": "startTrading",
	"0x8f70ccf7": "setTrading",
	"0x1f600db0": "OpenTrading",
	"0xc9567bf9": "openTrading",
	"0x8a8c523c": "enableTrading",
	// "0x924de9b7": "updateSwapEnabled",
};

const FUNC_MAP = {
	renounceOwnership: {
		valuesToUpdate: ["isRenounced", "renouncedAt"],
		callFn: "owner",
		message: "Ownership has been renounced",
	},
	renounceownership: {
		valuesToUpdate: ["isRenounced", "renouncedAt"],
		callFn: "owner",
		message: "Ownership has been renounced",
	},
	startTrade: {
		valuesToUpdate: ["isTradeable"],
		callFn: "isTradeableFn",
		message: "Trading has been started",
	},
	startTrading: {
		valuesToUpdate: ["isTradeable"],
		callFn: "isTradeableFn",
		message: "Trading has been started",
	},
	setTrading: {
		valuesToUpdate: ["isTradeable"],
		callFn: "isTradeableFn",
		message: "Trading has been started",
	},
	openTrading: {
		valuesToUpdate: ["isTradeable"],
		callFn: "isTradeableFn",
		message: "Trading has been started",
	},
	OpenTrading: {
		valuesToUpdate: ["isTradeable"],
		callFn: "isTradeableFn",
		message: "Trading has been started",
	},
	enableTrading: {
		valuesToUpdate: ["isTradeable"],
		callFn: "isTradeableFn",
		message: "Trading has been started",
	},
	// updateSwapEnabled: {
	// 	valuesToUpdate: ["swapEnabled"],
	// 	callFn: "swapEnabled",
	// 	message: "Swap has been enabled",
	// },
	updateSellFees: {
		valuesToUpdate: ["sellTax"],
		callFn: "sellTaxFn",
		message: "Sell fees have been updated",
	},
	updateSellFees: {
		valuesToUpdate: ["sellTax"],
		callFn: "sellTaxFn",
		message: "Sell fees have been updated",
	},
	updateBuyFees: {
		valuesToUpdate: ["buyTax"],
		callFn: "buyTaxFn",
		message: "Buy fees have been updated",
	},
	updateBuyFees: {
		valuesToUpdate: ["buyTax"],
		callFn: "buyTaxFn",
		message: "Buy fees have been updated",
	},
	setFee: {
		valuesToUpdate: ["buyTax", "sellTax"],
		callFn: ["buyTaxFn", "sellTaxFn"],
		message: "Fees have been updated",
	},
	setFees: {
		valuesToUpdate: ["buyTax", "sellTax"],
		callFn: ["buyTaxFn", "sellTaxFn"],
		message: "Fees have been updated",
	},
	setTaxxa: {
		valuesToUpdate: ["buyTax", "sellTax"],
		callFn: ["buyTaxFn", "sellTaxFn"],
		message: "Fees have been updated",
	},
	updateFees: {
		valuesToUpdate: ["sellTax", "buyTax"],
		callFn: ["sellTaxFn", "buyTaxFn"],
		message: "Fees have been updated",
	},
	updateMax: {
		valuesToUpdate: ["maxTx", "maxWallet"],
		callFn: ["maxTxFn", "maxWalletFn"],
		message: "Max transaction and max wallet have been updated",
	},
	setMaxWalletSize: {
		valuesToUpdate: ["maxWallet"],
		callFn: "maxWalletFn",
		message: "Max wallet size has been updated",
	},
	changeMaxWallet: {
		valuesToUpdate: ["maxWallet"],
		callFn: "maxWalletFn",
		message: "Max wallet size has been updated",
	},
	updateMaxWalletAmount: {
		valuesToUpdate: ["maxWallet"],
		callFn: "maxWalletFn",
		message: "Max wallet size has been updated",
	},
	changeMaxTx: {
		valuesToUpdate: ["maxTx"],
		callFn: "maxTxFn",
		message: "Max transaction amount has been updated",
	},
	setMaxTxnAmount: {
		valuesToUpdate: ["maxTx"],
		callFn: "maxTxFn",
		message: "Max transaction amount has been updated",
	},
	updateMaxTxnAmount: {
		valuesToUpdate: ["maxTx"],
		callFn: "maxTxFn",
		message: "Max transaction amount has been updated",
	},
	updateMaxBuyAmount: {
		valuesToUpdate: ["maxTx"],
		callFn: "maxTxFn",
		message: "Max transaction amount has been updated",
	},
	updateMaxTxnAmounts: {
		valuesToUpdate: ["maxTx"],
		callFn: "maxTxFn",
		message: "Max transaction amount has been updated",
	},
	setMaxTransactionAmounts: {
		valuesToUpdate: ["maxTx"],
		callFn: "maxTxFn",
		message: "Max transaction amount has been updated",
	},
	setTransactionLimits: {
		valuesToUpdate: ["maxTx", "maxWallet"],
		callFn: ["maxTxFn", "maxWalletFn"],
		message: "Max transaction and max wallet have been updated",
	},
};

// New function to add _fees to the end of the function name
const tradingFns = [
	"tradeOpen",
	"tradingOpen",
	"isTradingEnabled",
	"startTrades",
	"TradingOpen",
	"tradingActive",
	"tradingEnabled",
	"startsTrades",
	// "swapEnabled",
];
const buyTaxFns = [
	"buyFee",
	"buyTotalFees",
	"buyTax",
	"totalBuy",
	"totalBuyTax",
	"_buyFundFee",
	"BuyFee",
	"_tokensBuyFee",
];
const sellTaxFns = [
	"sellFee",
	"sellTotalFees",
	"sellTax",
	"totalSell",
	"totalSellTax",
	"_sellFundFee",
	"SellFee",
	"_tokensSellFee",
];
const maxBuyFns = ["_maxTxAmount", "maxTransactionAmount", "maxTransaction", "maxBuyAmount"];
const maxWalletFns = ["_maxWalletSize", "maxWallet", "_maxWalletToken", "maxWalletAmount"];

const HUNDRED_ETH_IN_WEI = "100000000000000000000";
const WETH_CONTRACT_ADDRESS = "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2";
const WETH_CONTRACT_ABI = [
	{
		constant: true,
		inputs: [],
		name: "name",
		outputs: [{ name: "", type: "string" }],
		payable: false,
		stateMutability: "view",
		type: "function",
	},
	{
		constant: false,
		inputs: [
			{ name: "guy", type: "address" },
			{ name: "wad", type: "uint256" },
		],
		name: "approve",
		outputs: [{ name: "", type: "bool" }],
		payable: false,
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		constant: true,
		inputs: [],
		name: "totalSupply",
		outputs: [{ name: "", type: "uint256" }],
		payable: false,
		stateMutability: "view",
		type: "function",
	},
	{
		constant: false,
		inputs: [
			{ name: "src", type: "address" },
			{ name: "dst", type: "address" },
			{ name: "wad", type: "uint256" },
		],
		name: "transferFrom",
		outputs: [{ name: "", type: "bool" }],
		payable: false,
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		constant: false,
		inputs: [{ name: "wad", type: "uint256" }],
		name: "withdraw",
		outputs: [],
		payable: false,
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		constant: true,
		inputs: [],
		name: "decimals",
		outputs: [{ name: "", type: "uint8" }],
		payable: false,
		stateMutability: "view",
		type: "function",
	},
	{
		constant: true,
		inputs: [{ name: "", type: "address" }],
		name: "balanceOf",
		outputs: [{ name: "", type: "uint256" }],
		payable: false,
		stateMutability: "view",
		type: "function",
	},
	{
		constant: true,
		inputs: [],
		name: "symbol",
		outputs: [{ name: "", type: "string" }],
		payable: false,
		stateMutability: "view",
		type: "function",
	},
	{
		constant: false,
		inputs: [
			{ name: "dst", type: "address" },
			{ name: "wad", type: "uint256" },
		],
		name: "transfer",
		outputs: [{ name: "", type: "bool" }],
		payable: false,
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		constant: false,
		inputs: [],
		name: "deposit",
		outputs: [],
		payable: true,
		stateMutability: "payable",
		type: "function",
	},
	{
		constant: true,
		inputs: [
			{ name: "", type: "address" },
			{ name: "", type: "address" },
		],
		name: "allowance",
		outputs: [{ name: "", type: "uint256" }],
		payable: false,
		stateMutability: "view",
		type: "function",
	},
	{ payable: true, stateMutability: "payable", type: "fallback" },
	{
		anonymous: false,
		inputs: [
			{ indexed: true, name: "src", type: "address" },
			{ indexed: true, name: "guy", type: "address" },
			{ indexed: false, name: "wad", type: "uint256" },
		],
		name: "Approval",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, name: "src", type: "address" },
			{ indexed: true, name: "dst", type: "address" },
			{ indexed: false, name: "wad", type: "uint256" },
		],
		name: "Transfer",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, name: "dst", type: "address" },
			{ indexed: false, name: "wad", type: "uint256" },
		],
		name: "Deposit",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, name: "src", type: "address" },
			{ indexed: false, name: "wad", type: "uint256" },
		],
		name: "Withdrawal",
		type: "event",
	},
];

const POOL_ABI = [
	{ inputs: [], stateMutability: "nonpayable", type: "constructor" },
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "owner", type: "address" },
			{ indexed: true, internalType: "int24", name: "tickLower", type: "int24" },
			{ indexed: true, internalType: "int24", name: "tickUpper", type: "int24" },
			{ indexed: false, internalType: "uint128", name: "amount", type: "uint128" },
			{ indexed: false, internalType: "uint256", name: "amount0", type: "uint256" },
			{ indexed: false, internalType: "uint256", name: "amount1", type: "uint256" },
		],
		name: "Burn",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "owner", type: "address" },
			{ indexed: false, internalType: "address", name: "recipient", type: "address" },
			{ indexed: true, internalType: "int24", name: "tickLower", type: "int24" },
			{ indexed: true, internalType: "int24", name: "tickUpper", type: "int24" },
			{ indexed: false, internalType: "uint128", name: "amount0", type: "uint128" },
			{ indexed: false, internalType: "uint128", name: "amount1", type: "uint128" },
		],
		name: "Collect",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "sender", type: "address" },
			{ indexed: true, internalType: "address", name: "recipient", type: "address" },
			{ indexed: false, internalType: "uint128", name: "amount0", type: "uint128" },
			{ indexed: false, internalType: "uint128", name: "amount1", type: "uint128" },
		],
		name: "CollectProtocol",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "sender", type: "address" },
			{ indexed: true, internalType: "address", name: "recipient", type: "address" },
			{ indexed: false, internalType: "uint256", name: "amount0", type: "uint256" },
			{ indexed: false, internalType: "uint256", name: "amount1", type: "uint256" },
			{ indexed: false, internalType: "uint256", name: "paid0", type: "uint256" },
			{ indexed: false, internalType: "uint256", name: "paid1", type: "uint256" },
		],
		name: "Flash",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: false, internalType: "uint16", name: "observationCardinalityNextOld", type: "uint16" },
			{ indexed: false, internalType: "uint16", name: "observationCardinalityNextNew", type: "uint16" },
		],
		name: "IncreaseObservationCardinalityNext",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: false, internalType: "uint160", name: "sqrtPriceX96", type: "uint160" },
			{ indexed: false, internalType: "int24", name: "tick", type: "int24" },
		],
		name: "Initialize",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: false, internalType: "address", name: "sender", type: "address" },
			{ indexed: true, internalType: "address", name: "owner", type: "address" },
			{ indexed: true, internalType: "int24", name: "tickLower", type: "int24" },
			{ indexed: true, internalType: "int24", name: "tickUpper", type: "int24" },
			{ indexed: false, internalType: "uint128", name: "amount", type: "uint128" },
			{ indexed: false, internalType: "uint256", name: "amount0", type: "uint256" },
			{ indexed: false, internalType: "uint256", name: "amount1", type: "uint256" },
		],
		name: "Mint",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: false, internalType: "uint8", name: "feeProtocol0Old", type: "uint8" },
			{ indexed: false, internalType: "uint8", name: "feeProtocol1Old", type: "uint8" },
			{ indexed: false, internalType: "uint8", name: "feeProtocol0New", type: "uint8" },
			{ indexed: false, internalType: "uint8", name: "feeProtocol1New", type: "uint8" },
		],
		name: "SetFeeProtocol",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{ indexed: true, internalType: "address", name: "sender", type: "address" },
			{ indexed: true, internalType: "address", name: "recipient", type: "address" },
			{ indexed: false, internalType: "int256", name: "amount0", type: "int256" },
			{ indexed: false, internalType: "int256", name: "amount1", type: "int256" },
			{ indexed: false, internalType: "uint160", name: "sqrtPriceX96", type: "uint160" },
			{ indexed: false, internalType: "uint128", name: "liquidity", type: "uint128" },
			{ indexed: false, internalType: "int24", name: "tick", type: "int24" },
		],
		name: "Swap",
		type: "event",
	},
	{
		inputs: [
			{ internalType: "int24", name: "tickLower", type: "int24" },
			{ internalType: "int24", name: "tickUpper", type: "int24" },
			{ internalType: "uint128", name: "amount", type: "uint128" },
		],
		name: "burn",
		outputs: [
			{ internalType: "uint256", name: "amount0", type: "uint256" },
			{ internalType: "uint256", name: "amount1", type: "uint256" },
		],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "recipient", type: "address" },
			{ internalType: "int24", name: "tickLower", type: "int24" },
			{ internalType: "int24", name: "tickUpper", type: "int24" },
			{ internalType: "uint128", name: "amount0Requested", type: "uint128" },
			{ internalType: "uint128", name: "amount1Requested", type: "uint128" },
		],
		name: "collect",
		outputs: [
			{ internalType: "uint128", name: "amount0", type: "uint128" },
			{ internalType: "uint128", name: "amount1", type: "uint128" },
		],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "recipient", type: "address" },
			{ internalType: "uint128", name: "amount0Requested", type: "uint128" },
			{ internalType: "uint128", name: "amount1Requested", type: "uint128" },
		],
		name: "collectProtocol",
		outputs: [
			{ internalType: "uint128", name: "amount0", type: "uint128" },
			{ internalType: "uint128", name: "amount1", type: "uint128" },
		],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [],
		name: "factory",
		outputs: [{ internalType: "address", name: "", type: "address" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "fee",
		outputs: [{ internalType: "uint24", name: "", type: "uint24" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "feeGrowthGlobal0X128",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "feeGrowthGlobal1X128",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "recipient", type: "address" },
			{ internalType: "uint256", name: "amount0", type: "uint256" },
			{ internalType: "uint256", name: "amount1", type: "uint256" },
			{ internalType: "bytes", name: "data", type: "bytes" },
		],
		name: "flash",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [{ internalType: "uint16", name: "observationCardinalityNext", type: "uint16" }],
		name: "increaseObservationCardinalityNext",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [{ internalType: "uint160", name: "sqrtPriceX96", type: "uint160" }],
		name: "initialize",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [],
		name: "liquidity",
		outputs: [{ internalType: "uint128", name: "", type: "uint128" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "maxLiquidityPerTick",
		outputs: [{ internalType: "uint128", name: "", type: "uint128" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "recipient", type: "address" },
			{ internalType: "int24", name: "tickLower", type: "int24" },
			{ internalType: "int24", name: "tickUpper", type: "int24" },
			{ internalType: "uint128", name: "amount", type: "uint128" },
			{ internalType: "bytes", name: "data", type: "bytes" },
		],
		name: "mint",
		outputs: [
			{ internalType: "uint256", name: "amount0", type: "uint256" },
			{ internalType: "uint256", name: "amount1", type: "uint256" },
		],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		name: "observations",
		outputs: [
			{ internalType: "uint32", name: "blockTimestamp", type: "uint32" },
			{ internalType: "int56", name: "tickCumulative", type: "int56" },
			{ internalType: "uint160", name: "secondsPerLiquidityCumulativeX128", type: "uint160" },
			{ internalType: "bool", name: "initialized", type: "bool" },
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [{ internalType: "uint32[]", name: "secondsAgos", type: "uint32[]" }],
		name: "observe",
		outputs: [
			{ internalType: "int56[]", name: "tickCumulatives", type: "int56[]" },
			{ internalType: "uint160[]", name: "secondsPerLiquidityCumulativeX128s", type: "uint160[]" },
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
		name: "positions",
		outputs: [
			{ internalType: "uint128", name: "liquidity", type: "uint128" },
			{ internalType: "uint256", name: "feeGrowthInside0LastX128", type: "uint256" },
			{ internalType: "uint256", name: "feeGrowthInside1LastX128", type: "uint256" },
			{ internalType: "uint128", name: "tokensOwed0", type: "uint128" },
			{ internalType: "uint128", name: "tokensOwed1", type: "uint128" },
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "protocolFees",
		outputs: [
			{ internalType: "uint128", name: "token0", type: "uint128" },
			{ internalType: "uint128", name: "token1", type: "uint128" },
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "uint8", name: "feeProtocol0", type: "uint8" },
			{ internalType: "uint8", name: "feeProtocol1", type: "uint8" },
		],
		name: "setFeeProtocol",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [],
		name: "slot0",
		outputs: [
			{ internalType: "uint160", name: "sqrtPriceX96", type: "uint160" },
			{ internalType: "int24", name: "tick", type: "int24" },
			{ internalType: "uint16", name: "observationIndex", type: "uint16" },
			{ internalType: "uint16", name: "observationCardinality", type: "uint16" },
			{ internalType: "uint16", name: "observationCardinalityNext", type: "uint16" },
			{ internalType: "uint8", name: "feeProtocol", type: "uint8" },
			{ internalType: "bool", name: "unlocked", type: "bool" },
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "int24", name: "tickLower", type: "int24" },
			{ internalType: "int24", name: "tickUpper", type: "int24" },
		],
		name: "snapshotCumulativesInside",
		outputs: [
			{ internalType: "int56", name: "tickCumulativeInside", type: "int56" },
			{ internalType: "uint160", name: "secondsPerLiquidityInsideX128", type: "uint160" },
			{ internalType: "uint32", name: "secondsInside", type: "uint32" },
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "recipient", type: "address" },
			{ internalType: "bool", name: "zeroForOne", type: "bool" },
			{ internalType: "int256", name: "amountSpecified", type: "int256" },
			{ internalType: "uint160", name: "sqrtPriceLimitX96", type: "uint160" },
			{ internalType: "bytes", name: "data", type: "bytes" },
		],
		name: "swap",
		outputs: [
			{ internalType: "int256", name: "amount0", type: "int256" },
			{ internalType: "int256", name: "amount1", type: "int256" },
		],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [{ internalType: "int16", name: "", type: "int16" }],
		name: "tickBitmap",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "tickSpacing",
		outputs: [{ internalType: "int24", name: "", type: "int24" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [{ internalType: "int24", name: "", type: "int24" }],
		name: "ticks",
		outputs: [
			{ internalType: "uint128", name: "liquidityGross", type: "uint128" },
			{ internalType: "int128", name: "liquidityNet", type: "int128" },
			{ internalType: "uint256", name: "feeGrowthOutside0X128", type: "uint256" },
			{ internalType: "uint256", name: "feeGrowthOutside1X128", type: "uint256" },
			{ internalType: "int56", name: "tickCumulativeOutside", type: "int56" },
			{ internalType: "uint160", name: "secondsPerLiquidityOutsideX128", type: "uint160" },
			{ internalType: "uint32", name: "secondsOutside", type: "uint32" },
			{ internalType: "bool", name: "initialized", type: "bool" },
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "token0",
		outputs: [{ internalType: "address", name: "", type: "address" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "token1",
		outputs: [{ internalType: "address", name: "", type: "address" }],
		stateMutability: "view",
		type: "function",
	},
];

const LIQUIDITY_METHOD_IDS = ["0xf305d719", "0xe8e33700"];
const RENOUNCE_OWNERHIP_METHODS = ["0x715018a6", "0xc2af913b"];
const WRAPPED_ETH = "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2".toLowerCase();
const DEAD_ADDRESSES = ["0x0000000000000000000000000000000000000000", "0x000000000000000000000000000000000000dEaD"];

module.exports = {
	CONTRACT_ABI,
	UNISWAP_ROUTER_ABI,
	POOL_ABI,
	tradingFns,
	buyTaxFns,
	sellTaxFns,
	maxBuyFns,
	maxWalletFns,
	FUNC_MAP,
	FUNC_SIGNATURE_MAP,
	UNCX_CONTRACT_ADDRESS,
	UNCX_CONTRACT_ABI,
	WETH_CONTRACT_ADDRESS,
	WETH_CONTRACT_ABI,
	HUNDRED_ETH_IN_WEI,
	WRAPPED_ETH,
	DEAD_ADDRESSES,
	LIQUIDITY_METHOD_IDS,
	RENOUNCE_OWNERHIP_METHODS,
};
